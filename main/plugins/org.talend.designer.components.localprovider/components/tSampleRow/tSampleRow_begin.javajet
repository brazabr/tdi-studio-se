<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
"
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/LogUtil.javajet"%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
	 log = new LogUtil(node);
String range = ElementParameterParser.getValue(node,"__RANGE__");
	 log.startWork();
	 log.logCompSetting();

boolean isVar = false;
if(range.matches(".*[a-zA-Z]+.*")){
isVar = true;
}else{
range = range.replaceAll("\n",",").replaceAll("\"","");
}
%>
<%if(isVar){%>
String[] range<%=cid%> = <%=range%>.split(",");
<%}else{%>
String[] range<%=cid%> = "<%=range%>".split(",");
<%}%>
java.util.Set rangeSet<%=cid%> = new java.util.HashSet();

Integer nb_line_<%=cid%> = 0;

for(int i =0;i<range<%=cid%>.length;i++){

	if(range<%=cid%>[i].matches("\\d+")){
	
		rangeSet<%=cid%> .add(Integer.valueOf(range<%=cid%>[i]));
		
	}else if(range<%=cid%>[i].matches("\\d+\\.\\.\\d+")){
		
		String[] edge<%=cid%>= range<%=cid%>[i].split("\\.\\.");
		
		for(int j=Integer.valueOf(edge<%=cid%>[0]).intValue();j<Integer.valueOf(edge<%=cid%>[1]).intValue()+1;j++){			
			rangeSet<%=cid%> .add(Integer.valueOf(j));			
		}		
	}else{
	
	}
	
}
